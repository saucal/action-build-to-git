name: "Build to GIT"
description: ""
inputs:
  path:
    description: "Previously built folder (needs to be a repo)"
    required: true
  from:
    description: "Newly built code (doesn't need to be a repo)"
    required: true
  defer-push:
    description: "Do not push immediately"
    required: false
    default: "false"
  do-push:
    description: "Do a previously deferred push"
    required: false
    default: "false"
  force-ignore:
    description: "Force ignore files"
    required: false
    default: ""
outputs:
  manifest:
    description: "Manifest of files changed"
    value: ${{ steps.main.outputs.manifest }}
  manifest-raw:
    description: "GIT Diff of commited file"
    value: ${{ steps.main.outputs.manifest-raw }}
  manifest-full:
    description: "Full list of files"
    value: ${{ steps.main.outputs.manifest-full }}
  has-prev-commit:
    description: "Whether a commit was made before the current change"
    value: ${{ steps.main.outputs.has-prev-commit }}
    
runs:
  using: "composite"
  steps:
    - name: Path Setup
      if: ${{ inputs.do-push == 'true' }}
      id: do-push
      shell: bash
      env:
        PATH_DIR: ${{ inputs.path }}
      run: "${{ github.action_path }}/do-push.sh"
    - name: Path Setup
      if: ${{ inputs.do-push != 'true' }}
      id: main
      shell: bash
      env:
        PATH_DIR: ${{ inputs.path }}
        FROM_DIR: ${{ inputs.from }}
        DEFER_PUSH: ${{ inputs.defer-push }}
        FORCE_IGNORE: ${{ inputs.force-ignore }}
      run: "${{ github.action_path }}/main.sh"
